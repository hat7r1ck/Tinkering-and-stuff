import os
import yaml
import pandas as pd

# Define folders and output paths
detections_folder = r"path_to_your_detections_folder"
stories_folder = r"path_to_your_stories_folder"
mitre_csv_path = r"path_to_your_mitre_csv"
output_csv_path = r"path_to_your_output_csv"

# Function to load all YAML files from a folder
def load_yml_files_from_folder(folder_path):
    data = []
    for file_name in os.listdir(folder_path):
        if file_name.endswith((".yml", ".yaml")):
            file_path = os.path.join(folder_path, file_name)
            try:
                with open(file_path, "r") as file:
                    data.append(yaml.safe_load(file))
            except Exception as e:
                print(f"Error loading {file_name}: {e}")
    return data

# Load detection and story YAML files
detections = load_yml_files_from_folder(detections_folder)
stories = load_yml_files_from_folder(stories_folder)

# Parse detections
detections_list = []
for detection in detections:
    if detection:
        name = detection.get("name")
        tags = detection.get("tags", {})
        mitre_attack_id = tags.get("mitre_attack_id", "")
        tactics = "|".join(tags.get("tactics", []))
        data_sources = "|".join(detection.get("data_source", []))
        detections_list.append({
            "detection_name": name,
            "tactics": tactics,
            "data_sources": data_sources,
            "mitre_attack_id": mitre_attack_id,
        })

detections_df = pd.DataFrame(detections_list)

# Parse stories
stories_list = []
for story in stories:
    if story:
        name = story.get("name")
        description = story.get("description", "")
        products = "|".join(story.get("products", []))
        creation_date = story.get("creation_date", "")
        detections_in_story = "|".join(story.get("detections", []))
        stories_list.append({
            "story_name": name,
            "description": description,
            "products": products,
            "creation_date": creation_date,
            "detections": detections_in_story,
        })

stories_df = pd.DataFrame(stories_list)

# Load MITRE data from CSV
mitre_df = pd.read_csv(mitre_csv_path)

# Merge stories with detections
merged_df = stories_df.merge(
    detections_df,
    how="left",
    left_on="detections",
    right_on="detection_name"
)

# Merge with MITRE data
merged_df = merged_df.merge(
    mitre_df,
    how="left",
    left_on="mitre_attack_id",
    right_on="mitre_id"
)

# Rename columns to match manager's requirements
merged_df = merged_df.rename(columns={
    "story_name": "Name (Story)",
    "data_sources": "Data Sources",
    "tactics": "Tactics",
    "products": "Products",
    "creation_date": "Date",
})

# Final column selection
final_columns = ["Name (Story)", "Data Sources", "Tactics", "Products", "Date", "mitre_attack_id"]
merged_df = merged_df[final_columns]

# Save to CSV
merged_df.to_csv(output_csv_path, index=False)

print(f"CSV successfully created at: {output_csv_path}")
